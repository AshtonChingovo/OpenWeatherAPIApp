plugins {
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id "com.google.protobuf" version "0.8.17"
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
}

android {
    namespace 'com.dvtopenweather.dvtopenweatherapp'
    compileSdk 33

    defaultConfig {
        applicationId "com.dvtopenweather.dvtopenweatherapp"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.2.0'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    def datastore_version = "1.0.0-rc01"
    def protobuf_version = "3.14.0"

    def hilt_android_version = "2.44.2"
    def hilt_navigation_compose_version = "1.0.0"

    def room_version = "2.5.0"
    def retrofit_version = "2.9.0"
    def okhttp_interceptor_version = "4.10.0"
    def nav_version = "2.5.3"

    def coroutines_version = "1.6.4"

    implementation "androidx.datastore:datastore:$datastore_version"
    implementation  "com.google.protobuf:protobuf-javalite:$protobuf_version"

    implementation "com.google.dagger:hilt-android:$hilt_android_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_android_version"
    implementation "androidx.hilt:hilt-navigation-compose:$hilt_navigation_compose_version"

    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    kapt("androidx.room:room-compiler:$room_version")
    annotationProcessor("androidx.room:room-compiler:$room_version")

    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_interceptor_version"

    implementation 'androidx.navigation:navigation-runtime-ktx:2.5.3'
    implementation "androidx.navigation:navigation-compose:$nav_version"

    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    implementation 'com.google.accompanist:accompanist-permissions:0.29.1-alpha'

    implementation "androidx.lifecycle:lifecycle-runtime-compose:2.6.0-beta01"
    implementation 'androidx.activity:activity-compose:1.6.1'
    implementation "androidx.compose.ui:ui:$compose_ui_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_ui_version"
    implementation 'androidx.compose.material:material:1.3.1'

    implementation "com.google.maps.android:maps-compose:1.0.0"
    implementation "com.google.android.gms:play-services-maps:18.1.0"
    implementation 'com.google.android.libraries.places:places:3.0.0'
    implementation 'com.google.android.gms:play-services-location:21.0.1'

    implementation "com.google.accompanist:accompanist-systemuicontroller:0.28.0"

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.1'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_ui_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_ui_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_ui_version"

    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"

}

// Allow references to generated code
kapt {
    correctErrorTypes = true
}

protobuf {
// Configure the protoc executable
    protoc {
        if (project.hasProperty('protoc_platform')) {
            artifact = "com.google.protobuf:protoc:3.18.0:${protoc_platform}"
        } else {
            artifact = "com.google.protobuf:protoc:3.18.0"
        }
    }
    plugins {
        javalite {
            // The codegen for lite comes as a separate artifact
            if (project.hasProperty('protoc_platform')) {
                artifact = "com.google.protobuf:protoc-gen-javalite:3.18.0:${protoc_platform}"
            } else {
                artifact = "com.google.protobuf:protoc-gen-javalite:3.18.0"
            }
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}